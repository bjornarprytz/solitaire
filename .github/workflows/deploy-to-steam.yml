# https://github.com/seanmaxwell/godot-example-auto-deploy/blob/main/.github/workflows/godot-ci.yml

name: Publish to Steam
on:
  push:
    tags:
      - "steam*"

env:
  GAME_NAME: solitaire
  PROJECT_PATH: "./src/"
  GODOT_VERSION: 4.5-stable

jobs:
  export-game:
    name: Export game
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Export
        id: export
        uses: firebelley/godot-export@v6.0.0
        with:
          godot_executable_download_url: https://github.com/godotengine/godot-builds/releases/download/${{env.GODOT_VERSION}}/Godot_v${{env.GODOT_VERSION}}_linux.x86_64.zip
          godot_export_templates_download_url: https://github.com/godotengine/godot-builds/releases/download/${{env.GODOT_VERSION}}/Godot_v${{env.GODOT_VERSION}}_export_templates.tpz
          relative_project_path: ${{ env.PROJECT_PATH}}
          use_preset_export_path: true
      - name: Upload Windows Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.GAME_NAME }}.${{ github.ref_name }}.windows
          path: ${{ steps.export.outputs.build_directory }}/Windows Desktop
      - name: Upload MacOS Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.GAME_NAME }}.${{ github.ref_name }}.mac
          path: ${{ steps.export.outputs.build_directory }}/macOS
      - name: Upload Linux Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.GAME_NAME }}.${{ github.ref_name }}.linux
          path: ${{ steps.export.outputs.build_directory }}/LinuxX11
      - name: Upload Web Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.GAME_NAME }}.${{ github.ref_name }}.web
          path: ${{ steps.export.outputs.build_directory }}/Web

  steam-upload:
    name: Deploy to Steam
    needs: [export-game]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [windows] # Other options: web, mac, linux
    steps:
      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Test
        run: |
          echo $RELEASE_VERSION
          echo ${{ env.RELEASE_VERSION }}
      - name: Download Artifact (Windows)
        uses: actions/download-artifact@v4.1.8
        with:
          name: ${{ env.GAME_NAME }}.${{ github.ref_name }}.windows
          path: depotXPath # CHANGE ME (Find/Setup in the Steamworks dashboard)
      - name: Deploy to Steam
        uses: game-ci/steam-deploy@v3
        with:
          username: ${{ secrets.STEAM_USERNAME }} # Get CI account (setup access in the Steamworks dashboard)
          configVdf: ${{ secrets.STEAM_CONFIG_VDF }}
          # Find ConfigVdf by logging with the SteamCMD tool
          # `steamcmd +login <username> <password> +quit`
          # `cat config/config.vdf | base64 > config_base64.txt`
          # https://github.com/game-ci/steam-deploy?tab=readme-ov-file#configuration
          appId: ${{ secrets.STEAM_APP_ID }}
          buildDescription: ${{ env.RELEASE_VERSION }}
          releaseBranch: release # CHANGE ME (Find/Setup in the Steamworks dashboard)
          depotXPath: depotXPath # CHANGE ME (Find/Setup in the Steamworks dashboard)
